% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tgmrf.R
\name{tgmrf}
\alias{tgmrf}
\title{Transformed Gaussian Markov Random Field}
\usage{
tgmrf(data, formula, neigh, scale = T, spatial_var, neigh_order = NULL,
  group_var = NULL, change_vars = NULL, beta = NULL, nu = 1,
  rho_s = 0, rho_t = 0, rho_st = 0, proposal_rho = "normal",
  tau = NULL, family = "poisson", type = "gamma-shape",
  mat_type = "car", method = "metropolis", nsim = 1000, burnin = 0,
  thin = 1, E = NULL, n = 1, prior_param = NULL,
  MCMC_config = NULL, fix_rho = NULL, range = list(rho_s = c(-1, 1),
  rho_t = c(-1, 1), rho_st = c(-1, 1)), rcpp = TRUE, conj = TRUE,
  verbose = FALSE, c_beta = NULL, c_eps = NULL, c_nu = NULL,
  c_rho = NULL)
}
\arguments{
\item{data}{A data.frame with all variables used to fit a model}

\item{formula}{Formula to fit the model}

\item{neigh}{Neighborhood structure of nb class or a neighborhood matrix}

\item{scale}{Logical parameter to scale covariates}

\item{spatial_var}{Variable name that indicates the column which represents the spatial variable}

\item{neigh_order}{Order that the spatial_var appear on data}

\item{group_var}{Variable name that indicates the column which represents the variable variable}

\item{change_vars}{Variables that change in the time. We'll return n_var parameters for this variable. One for each n_var.}

\item{beta}{Vector of the initial values to coeficients vector}

\item{nu}{A Initial value to variance of copula}

\item{rho_s}{Spatial dependence parameter}

\item{rho_t}{Temporal dependence parameter}

\item{rho_st}{Spatio-temporal dependence parameter}

\item{proposal_rho}{"normal" or "uniform}

\item{family}{'Poisson' or 'Binary'}

\item{type}{Depends of family.
'log-normal', 'gamma-shape', 'gamma-scale', 'weibull-shape', 'weibull-scale' for Poisson family
'beta-logit', 'beta-probit', 'beta-alpha', 'beta-beta' for Binomial family}

\item{mat_type}{car or leroux}

\item{method}{metropolis or arms}

\item{nsim}{Number of MCMC iterations}

\item{burnin}{number of discards iterations}

\item{thin}{Lag to collect the observations}

\item{E}{Offsets for Poisson data}

\item{n}{Number of trials in Binomial data}

\item{prior_param}{List of priors parameters. Gaussian for beta vector and Gamma for nu. Entrys are: 'nu' (list with shape and scale) and 'beta' (list with mean and precision)}

\item{MCMC_config}{Parameters to tunning MCMC. Entrys are: 'arms' (list with ninit and maxpoint) and 'metropolis' (list with var_beta, var_eps, var_rho and var_log_nu)}

\item{fix_rho}{A list informing if any rho (rho_s, rho_t, rho_st) is fixed}

\item{range}{A list informing a range for sampling rho (rho_s, rho_t, rho_st). Each entre must be a vector in the interval (-1, 1).}
}
\value{
beta A matrix with samples of beta

nu A vector with samples of nu

rho A vector with samples of rho
}
\description{
Use this function to fit spatial data using non-guassian copulas.
}
\examples{
library(spdep)
##-- Read the data
data(nenia_s)
##-- Coordinates and neighborhood structure
coord <- as.data.frame(cbind(x = nenia$x, y = nenia_s$y))
coordinates(coord) <- c("x","y")
dst <- 3
snail.nb <- dnearneigh(coord, 0, dst)
##-- Initial values
rho <- 0.5
nu <- 1
nsim = 6000 #--- This can take a long time (~4 hours)
formula = 'count ~ elevation + slope + nail +
                   densiometer + PREMON + PlApp'

out <- tgmrf(data = nenia_s, formula = formula,
             beta = NULL, nu = nu, rho_s = rho,
             family = "poisson", type = "gamma-shape", mat_type = "car",
             nsim = nsim, burnin = 30000, thin = 10,
             E = NULL, neigh = snail.nb)

}
